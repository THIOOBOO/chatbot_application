# Voici le contenu de mon fichier texte
# ABOUT DATA SCIENCE

# La data science, ou science des donn√©es, est un domaine interdisciplinaire qui utilise des m√©thodes scientifiques, des algorithmes et des syst√®mes pour extraire des connaissances et des informations significatives √† partir de donn√©es. Elle combine des comp√©tences en informatique, statistiques, math√©matiques et domaine d'expertise pour analyser de grands ensembles de donn√©es et aider √† la prise de d√©cision et √† la r√©solution de probl√®mes. 
# En d'autres termes, la data science permet d'exploiter les donn√©es pour comprendre le pass√©, analyser le pr√©sent et pr√©dire le futur. 
# En r√©sum√©, la data science :
# Collecte, nettoie et transforme les donn√©es: pour les rendre exploitables.

# Utilise des techniques statistiques et d'apprentissage automatique: pour analyser les donn√©es et identifier des tendances et des mod√®les. 
# D√©veloppe des mod√®les pr√©dictifs: pour anticiper les √©v√©nements futurs. 
# Aide √† la prise de d√©cision: en fournissant des informations et des insights pr√©cieux. 
# Applications de la data science :


# Secteur priv√©:
# Am√©lioration de l'exp√©rience client, optimisation des op√©rations, d√©veloppement de nouveaux produits.
# Secteur public:
# Analyse des donn√©es pour am√©liorer les politiques publiques, lutte contre la criminalit√©, pr√©vision des catastrophes naturelles.
# Recherche et d√©veloppement:
# Avanc√©es scientifiques dans divers domaines, de la m√©decine √† l'astronomie.
# M√©tiers li√©s √† la data science :


# Data scientist:
# Responsable de l'analyse des donn√©es, de la mod√©lisation et de l'interpr√©tation des r√©sultats.
# Data analyst:
# Sp√©cialis√© dans l'analyse de donn√©es pour aider √† la prise de d√©cision.
# Data engineer:
# Responsable de la collecte, du stockage et de la pr√©paration des donn√©es.



# Data manager:
# Responsable de la qualit√© et de la gestion des donn√©es.
# La data science est un domaine en constante √©volution, avec des technologies et des m√©thodes qui se d√©veloppent rapidement. Elle offre des opportunit√©s passionnantes pour ceux qui souhaitent travailler avec les donn√©es et avoir un impact significatif dans divers domaines.


import streamlit as st
import nltk
import string
import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from nltk.corpus import stopwords
from nltk.tokenize import sent_tokenize


nltk.download('punkt_tab')
nltk.download('stopwords')

# ----------- Pr√©traitement ----------
def preprocess(text):
    # D√©couper en phrases
    sentences = sent_tokenize(text.lower())
    
        # Nettoyage de ponctuation et stopwords
    stop_words = set(stopwords.words("french"))
    clean_sentences = []

    for sentence in sentences:
        words = sentence.translate(str.maketrans('', '', string.punctuation)).split()
        words = [w for w in words if w not in stop_words]
        clean_sentences.append(' '.join(words))
    
    return sentences, clean_sentences

# ----------- Similarit√© ----------
def get_most_relevant_sentence(user_input, original_sentences, clean_sentences):
    all_sentences = clean_sentences + [user_input]
    vectorizer = TfidfVectorizer()
    tfidf = vectorizer.fit_transform(all_sentences)
    
    # Similarit√© entre la question (dernier √©l√©ment) et toutes les autres
    similarity = cosine_similarity(tfidf[-1], tfidf[:-1])
    index = similarity.argmax()
    return original_sentences[index]

# ----------- Fonction chatbot ----------
def chatbot(user_input, text):
    original_sentences, clean_sentences = preprocess(text)
    user_input_clean = user_input.lower().translate(str.maketrans('', '', string.punctuation))
    return get_most_relevant_sentence(user_input_clean, original_sentences, clean_sentences)

# ----------- Interface Streamlit ----------
def main():
    st.title("ü§ñ Chatbot sur la Data Science")

    # Charger le fichier texte
    with open("My_field.txt", "r", encoding="utf-8") as file:
        text = file.read()
        
            # Zone de saisie utilisateur
    user_input = st.text_input("Posez une question sur la science des donn√©es :")

    if user_input:
        response = chatbot(user_input, text)
        st.markdown(f"**R√©ponse :** {response}")

if __name__ == "__main__":
    main()
    

    
